<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-3.0.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <!-- 引入属性文件,jdbc.properties,mail.properties位于src/main/resources目录下 -->
    <!--<context:property-placeholder location="classpath:properties/jdbc.properties,classpath:properties/mail.properties" />-->

    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <!-- 引入属性文件,jdbc.properties,mail.properties位于src/main/resources目录下 -->
                <value>classpath:properties/jdbc.properties</value>
                <value>classpath:properties/mail.properties</value>
            </list>
        </property>
    </bean>


    <!-- 自动扫描dao和service包(自动注入) -->
    <context:component-scan base-package="com.zhaols.SSMdome" />

    <!--开启Aop支持-->
    <aop:aspectj-autoproxy/>

    <!--连接数据库步骤
        1. 配置数据源 DataSource
        2. 配置 Session工厂
            注入   1 DataSource
                   2 mybatisConfig.xml配置文件
                   3 定义类别名的包   entity包名
        3. 配置 mapper 接口所在路径
    -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:mybatisConfig.xml"/>
        <property name="typeAliasesPackage" value="com.zhaols.SSMdome.entity"/>
    </bean>


    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.zhaols.SSMdome.mapper"/>
    </bean>

    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sqlSessionFactory" />
    </bean>

    <!--事物处理-->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- service 事务处理-->
    <aop:config proxy-target-class="true">
        <aop:advisor advice-ref="txAdvice"  pointcut="execution(* com.zhaols.*.server..*Service.*(..))"/>
    </aop:config>
    <tx:advice id="txAdvice" transaction-manager="txManager">
        <tx:attributes>
            <tx:method name="save*" />
            <tx:method name="insert*" />
            <tx:method name="update*" />
            <tx:method name="add*" />
            <tx:method name="remove*" />
            <tx:method name="delete*" />
            <tx:method name="create*" />
            <tx:method name="add*" />
            <tx:method name="start*" />
            <tx:method name="execute*" />
            <tx:method name="major*" />
            <tx:method name="jump*" />
            <tx:method name="aidant*" />
            <tx:method name="init*" />
            <tx:method name="*" read-only="true" />
        </tx:attributes>
    </tx:advice>

    <!--=============================   Shiro 配置 ===================================-->

    <!-- shiro Web 过滤器-->
        <!-- 注入参数配置
                1. securityManager
                2. loginUrl         认证提交地址
                3. successUrl       认证成功统一跳转到first.action
                4. unauthorizedUrl  指定没有权限操作时跳转页面
                5. 自定义filter配置-->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="/admin/login_toLogin.do"/>
        <property name="successUrl" value="/admin/login_index.do"/>
        <property name="unauthorizedUrl" value="/admin/login_error.do"/>
        <property name="filters">
            <map>
                <entry key="authc" value-ref="formAuthenticationFilter"/>
                <!--退出过滤器-->
                <entry key="logout" value-ref="systemLogoutFilter" />
            </map>
        </property>
        <property name="filterChainDefinitions">
            <value>
                <!-- 静态资源放行-->
                /layui/** = anon
                /eleTree/** = anon
                /admin/login_error.do = anon
                /admin/login_toRegistration.do = anon
                /admin/login_registration.do = anon
                /images/kaptcha.jpg = anon
                /admin/login_logout.do = logout
                /** = authc,resourceCheckFilter
            </value>
        </property>
    </bean>

    <bean  id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">

        <!--注入Session管理器-->
        <property name="sessionManager" ref="sessionManager"/>
        <!--记住我-->
        <property name="rememberMeManager" ref="rememberMeManager"/>
        <!-- 缓存 -->
        <property name="cacheManager" ref="shiroSpringCacheManager"/>
        <!--注入 realm-->
        <property name="realm" ref="thisMyRealm"/>
    </bean>

    <!--注入 realm-->
    <bean id="thisMyRealm" class="com.zhaols.SSMdome.shiro.MyRemalm">
        <property name="credentialsMatcher" ref="credentialsMatcher"/>
    </bean>


    <!-- 凭证匹配器 -->
    <bean id="credentialsMatcher"
          class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
        <property name="hashAlgorithmName" value="MD5" />
        <property name="hashIterations" value="1024" />
    </bean>

    <!-- 会话session管理器 -->
    <bean id="sessionManager"
          class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <!-- session的失效时长，单位毫秒 -->
        <property name="globalSessionTimeout" value="1800000" />
        <!-- 删除失效的session -->
        <property name="deleteInvalidSessions" value="true" />
    </bean>


    <!-- 自定义form认证过虑器 -->
    <bean id="formAuthenticationFilter" class="com.zhaols.SSMdome.shiro.MyFormAuthenticationFilter">
        <!-- 表单中账号的input名称-->
        <property name="usernameParam" value="username" />
        <!-- 表单中密码的input名称-->
        <property name="passwordParam" value="password" />
        <!-- 记住我input的名称-->
        <property name="rememberMeParam" value="rememberMe" />
    </bean>

    <!-- rememberMeManager管理器，写cookie，取出cookie生成用户信息 -->
    <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
        <property name="cookie" ref="rememberMeCookie" />
    </bean>
    <!-- 记住我cookie -->
    <bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <!-- rememberMe是cookie的名字 -->
        <constructor-arg value="rememberMe" />
        <!-- 记住我cookie生效时间30天 -->
        <property name="maxAge" value="2592000" />
    </bean>

    <bean id="resourceCheckFilter" class="com.zhaols.SSMdome.shiro.ResourceCheckFilter">
        <property name="errorUrl" value="/admin/login_error.do"/>
    </bean>
    <bean id="systemLogoutFilter" class="com.zhaols.SSMdome.shiro.SystemLogoutFilter"/>

    <!-- 配置shiro自带的缓存管理器 -->
    <bean id = "shiroSpringCacheManager" class="org.apache.shiro.cache.MemoryConstrainedCacheManager"/>

    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

   <!-- <bean id="shiroEhcacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <property name="cacheManagerConfigFile" value="classpath:resource/ehcache-shiro.xml"/>
    </bean>-->

    <!--======================================     freemarker 配置     ===============================-->
    <bean id="freemarkerConfig"
          class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <!--<property name="templateLoaderPath" value="/WEB-INF/pages" />-->
        <property name="freemarkerSettings">
            <props>
                <prop key="template_update_delay">0</prop>
                <prop key="default_encoding">UTF-8</prop>
                <prop key="number_format">0.##########</prop>
                <prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
                <prop key="classic_compatible">true</prop>
                <prop key="template_exception_handler">ignore</prop>
            </props>
        </property>
    </bean>
    <!-- 针对freemarker的视图配置 -->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
        <property name="cache" value="true" />
        <property name="suffix" value=".html" />
        <property name="contentType" value="text/html;charset=UTF-8"/>
        <property name="requestContextAttribute" value="request" />
        <property name="exposeSpringMacroHelpers" value="true" />
        <property name="exposeRequestAttributes" value="true" />
        <property name="exposeSessionAttributes" value="true" />
    </bean>


    <!--  ========================================  java Email 配置  ===========================================-->

    <!-- 使用qq邮箱 -->
    <bean id="javaMailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="${mail.host}"/>
        <property name="port" value="${mail.port}"/>
        <property name="username" value="${mail.username}"/>
        <property name="password" value="${mail.password}"/>
        <property name="defaultEncoding" value="UTF-8"></property>
        <property name="javaMailProperties">
            <props >
                <prop key="mail.smtp.auth">true</prop>
                <prop key="mail.debug">true</prop>
                <prop key="mail.smtp.timeout">0</prop>
                <prop key="mail.smtp.ssl.enable">true</prop>
                <prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop>
            </props>
        </property>
    </bean>

    <bean id="simpleMailMessage" class="org.springframework.mail.SimpleMailMessage">
        <property name="from" value="${mail.from}"></property>
    </bean>


    <!-- ======================================= 线程池配置 ================================== -->
    <bean id="threadPoolExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <!-- 核心线程数  -->
        <property name="corePoolSize" value="20" />
        <!-- 最大线程数 -->
            <property name="maxPoolSize" value="50" />
        <!-- 队列最大长度 >=mainExecutor.maxSize -->
        <property name="queueCapacity" value="1000" />
        <!-- 线程池维护线程所允许的空闲时间 -->
        <property name="keepAliveSeconds" value="300" />
        <!-- 线程池对拒绝任务(无线程可用)的处理策略 -->
        <!--<property name="rejectedExecutionHandler">
            <bean class="java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy" />
        </property>-->
    </bean>
</beans>